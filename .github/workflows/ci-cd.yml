name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Create Firebase credentials file
      run: echo '${{ secrets.FIREBASE_CREDENTIALS }}' > celes_microservice/credentials.json

    - name: Set Firebase Config Environment Variables
      run: |
        echo "FIREBASE_API_KEY=${{ secrets.APIKEY }}" >> $GITHUB_ENV
        echo "FIREBASE_AUTH_DOMAIN=${{ secrets.AUTHDOMAIN }}" >> $GITHUB_ENV
        echo "FIREBASE_PROJECT_ID=${{ secrets.PROJECTID }}" >> $GITHUB_ENV
        echo "FIREBASE_STORAGE_BUCKET=${{ secrets.STORAGEBUCKET }}" >> $GITHUB_ENV
        echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.MESSAGINGSENDERID }}" >> $GITHUB_ENV
        echo "FIREBASE_APP_ID=${{ secrets.APPID }}" >> $GITHUB_ENV
        # Assuming you don't have a database URL as a secret
        # echo "FIREBASE_DATABASE_URL=${{ secrets.YOUR_DATABASE_URL_SECRET }}" >> $GITHUB_ENV
        echo "FIREBASE_USERNAME=${{ secrets.FIREBASE_USERNAME }}" >> $GITHUB_ENV
        echo "FIREBASE_PASSWORD=${{ secrets.FIREBASE_PASSWORD }}" >> $GITHUB_ENV

    - name: List test directory contents
      run: ls -la tests/

    - name: Run Unit Tests
      run: pytest -vv tests/unit_tests.py

    - name: Static Code Analysis
      run: pylint myapp

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2

    - name: Deploy to Testing Environment
      run: |
        # Add deployment scripts here. Example:
        scp -r * user@your-testing-server:/path/to/app
        ssh user@your-testing-server 'cd /path/to/app && ./deploy.sh'
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
